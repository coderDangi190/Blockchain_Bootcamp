				
		#How to create Vite + React app with in own frame.
npm create vite@latest  y
Project_ name : Client
	React
	Javascript
	
	cd client
	npm install
	npm run dev

		# How to update Vite 
	npm audit
	npm audit fix
	npm install vite@latest
	npm audit



		#REACT JS
import React from 'react'
import {useState} from 'react'
import './App.css'
function App(){
 const[count, setCount] = useState(0);
	return(
	 <div>
	      <p> Count: {count}</p>
	       <button onClick ={() =>  setCount(count+1)}>Increment </button>
	  </div>
	);
}
export default App
				
				#JSX Example
const element = <h1> Hello, JSX! </h1>

const element = React.createElement('h1', null, 'Hello, JSX !');

				#props 
(1) Parent Component.js
import React from 'react';
import childComponent from './childComponent'
function ParentComponent(){
	const data = "Hello Sandip";
	return(
	   <div>
		<h3> message : {data}</h3>
	   </div>
	);
}

(2) ChildComponent.js
import React from 'react';
function childComponent(props){
	return(
	   <div>
		<p>{props.message}</p>
	   </div>
	);
}

				#Data Fetch
const[data, setdata] = useState([]);
async function fetchData(){
	const response = await  fetch("https: //ethereum-Sepolia-rpc.publicnode.com");
	const data = await response.json;
	console.log(data);
	setdata(data)
}
console.log("render");
return (
	<div>
	    <button onClick= {datafetch}>Data Fetch </button>
	</div>
);

				# Without used useState
function Example(){
	let count =0;
	function setCount(){
		count++;
	}
	return(
	   <div>
		<p>Count :{count}</p>
		<button onClick ={() => setCount()>Increment </button>
	   </div>
	);
}

				#  used useState
import React {useState} from 'react'
const Button = ()=>{
	const [count, setCount] = useState(0);
	const handleClick = () =>{
		setCount(count +1);
	}
	return(
	   <div>
		<p>Count:{count} </p>
		<button onClick = { handleClick}>Click Me </button>
	   </div>
}
export default Button;

			#note
const[state, setState] = useState(initialValue);


				#ParentFunction receive data From Child Function?

		#App.jsx

import React from "react"
import Demo from "./Demo"
function App(){
	function parentFunc(value){
		console.log(value);
	}
	return(
	  <div>
		<Demo parentFunc = {parentFunc} />
	  </div>
	)
}
export default App

		#Demo
function Demo({parentFunc}){
	const item =93
	const sendData = ()=>{
		parentFunc(item);
	}
	return(
	  <div>
		<button onClick = {sendData}>SendToParent</button>
	  </div>
	)

	
}
export default Demo
	

			#APP.jsx
import {useState, useEffect} from 'react';
import './App.css'

function App(){
	const[count, setCount] = useState(0);
	useEffect(()=>{
	  console.log("useEffect");
	}, [])
	return(
	  <div>
		<h1> Counter</h1>
		<button onClick= {()=>setCount(count+1)}> Increment</button>
		   
	   </div>
}
export default App


			#Data Fetch on usedState
import {useState, useEffect} from 'react';
import './App.css'

function App(){
	const[data, setData] = useState([]);
	useEffect(()={
		async function fetchData(){
			const Response = await fetch("https://api.coincap.io/v2/assets");
			const data = await Response.json;
			setData(data);
		}
		fetchData();
	},[]);
}
export default App;

			#Cleanup Function
Inside a Function{
	useEffect(()=>{
		console.log("useEffect");
		return ()=>{
		 	console.log("Cleanup Function call");
		}

	},[]);
}

			#Event Listener
document.body.addEventListener("click", clicker);
document.body.removeEventListener("click");




				#React Hook :- useRef
import {useRef} from 'react'
import './App.css'

function App(){
 	const nameRef= useRef(null);
	const PassRef = useRef(null);
	const inputReader = (e)=>{
		e.preventDefault()
		const name = nameRef.current.value;
		const password = passRef.current.value;
		console.log(name, password);
	}
	return(
	  <div>
		<form onSubmit={inputReader}>
			<label> Name:- </label>
			<input ref= {nameRef} type= "text"></input>
			<br>
			<label> Password:- </label>	
			<input ref={passRef} type= "password"></input>
			<br>
			<button type="submit"> Submit</button>
		</form>
	   </div>
}
export default App;


			#Single Page Application
Note :- firstly install , (" npm install react-router-dom");
		#App.jsx
import {CreateBrowserRouter, RouterProvider} from "react-router-dom";
import Demo from "./Demo";
import Home from "./Home";

function App(){
	
	return();
}
export default App;

		#Demo.jsx
function Demo(){
	return(
		<h1> Demo</h1>
	)
}
export default Demo


		#Home.jsx
import {Link} from 'react-router-dom';

function Home(){
	return(
	   <div>
		<h1>Home</h1>
		<Link to="/demo"> Go to Demo </Link>
		<a  href= "/demo">Go to Demo </a>
	   </div>
	)
}
export default Home



[Client is connected to the server]

npm init
npm create vite@latest --y

import {useRef} from ""
import "./app.css"


function App(){
	const nameRef = useRef(null);
	const passRef = useRef(null);	

	const  SendData =async(e)=>{
	try{
		e.preventDefault();
		const name= nameRef.current.value;
		const password = passRef.current.value;
	
		const res = await fetch("https://localhost:3000/user",
		method : "PORT",
		headers: {
		"Content-type"="Application/json"
		}
		body:{
			name, password
		})

		const data = await res.json();
		console.log(data);
	}
	catch(error){
		console.log(error);
	}}

	return(
		<>
			<form onSubmit="SendData()">
				<label UserName:- <input type="text"  ref="nameRef"/>/>
				<label Password:- <input type="password" ref="passRef"/>/>

				<button type="submit">Submit</button>
				
			</form>			
		</>
	)

}
		